# Generated by Django 3.0.4 on 2020-07-28 00:33

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Descripcion')),
                ('typeOf', models.BooleanField(default=True, verbose_name='¿Es docente?')),
            ],
            options={
                'verbose_name': 'Área',
                'verbose_name_plural': 'Curso - Áreas',
            },
        ),
        migrations.CreateModel(
            name='CourseInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.FileField(blank=True, default='static/image/perfil/course/perfildefault.jpg', null=True, upload_to='static/image/perfil/course')),
                ('capacity', models.PositiveSmallIntegerField(default=12)),
                ('openregistre', models.DateField(blank=True)),
                ('deadline', models.DateField(blank=True)),
                ('description', models.TextField(blank=True, max_length=1500)),
                ('price', models.PositiveSmallIntegerField(default=20)),
                ('curriculum', models.TextField(blank=True, max_length=2000)),
                ('requirements', models.TextField(blank=True, max_length=1000)),
                ('haveApplication', models.BooleanField(default=False)),
                ('yearMin', models.PositiveSmallIntegerField(default=18)),
                ('yearMax', models.PositiveSmallIntegerField(default=40)),
                ('isService', models.BooleanField(default=False, verbose_name='¿Es un servicio?')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.Area', verbose_name='Area')),
            ],
            options={
                'verbose_name': 'Curso / Servicio',
                'verbose_name_plural': 'Curso - Cursos y Servicios',
            },
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Jul 2020-Jul 2021', max_length=17, unique=True, verbose_name='Curso - Edición')),
                ('dateinit', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de Inicio')),
                ('dateend', models.DateField(default=datetime.date(2021, 1, 24), verbose_name='Fecha de Fin')),
            ],
            options={
                'verbose_name': 'Curso - Edición',
                'verbose_name_plural': 'Curso - Ediciones',
            },
        ),
        migrations.CreateModel(
            name='StudentPersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre(s)')),
                ('lastname', models.CharField(max_length=50, verbose_name='Apellidos')),
                ('gender', models.CharField(choices=[('m', 'Masculino'), ('f', 'Femenino'), ('n', 'No Declaro')], default='m', max_length=1, verbose_name='Género')),
                ('numberidentification', models.CharField(max_length=11, unique=True, verbose_name='Número de Identificación')),
                ('nacionality', models.CharField(default='cubana', max_length=50, verbose_name='Nacionalidad')),
                ('street', models.CharField(max_length=100, verbose_name='Calle')),
                ('city', models.CharField(max_length=50, verbose_name='Municipio / Ciudad')),
                ('state', models.CharField(max_length=50, verbose_name='Provincia / Estado')),
                ('cellphone', models.CharField(blank=True, max_length=8, null=True, verbose_name='Móvil')),
                ('phone', models.CharField(blank=True, max_length=8, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo Eletrónico')),
                ('degree', models.CharField(choices=[('Ing.', 'Ingeniero'), ('Lic.', 'Licenciado'), ('Ms.C.', 'Master en Ciencias'), ('Dr.C.', 'Doctor en Ciencias'), ('PhD.C.', 'Postdoctor en Ciencias'), ('Ning.', 'Ninguno')], default='Ning.', max_length=20, verbose_name='Grado Científico')),
                ('title', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Título')),
                ('ocupation', models.CharField(choices=[('te', 'Trabajador Estatal'), ('ac', 'Ama/o de Casa'), ('tp', 'Trabajador Privado'), ('do', 'Desocupado'), ('es', 'Estudiante')], default='do', max_length=2, verbose_name='Ocupación')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estudiante o Aspirante',
                'verbose_name_plural': 'Datos Personales - Estudiantes / Aspirantes',
                'unique_together': {('name', 'lastname', 'numberidentification', 'email')},
            },
        ),
        migrations.CreateModel(
            name='EnrollmentApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.CourseInformation')),
            ],
            options={
                'verbose_name': 'Aplicación - Matrícula',
                'verbose_name_plural': 'Aplicación - Matrículas',
                'unique_together': {('course', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AskApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('askBody', models.CharField(max_length=150, verbose_name='Pregunta')),
                ('askType', models.CharField(choices=[('t', 'Texto'), ('o', 'Opciones'), ('r', 'Radio Botón')], default='t', max_length=1, verbose_name='Tipo')),
                ('order', models.PositiveIntegerField(verbose_name='Orden')),
                ('textMax', models.PositiveIntegerField(default=200, verbose_name='Cantidad de Caracteres Permitidos en la Respuesta')),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.EnrollmentApplication', verbose_name='Aplicación')),
            ],
            options={
                'verbose_name': 'Aplicación - Pregunta',
                'verbose_name_plural': 'Aplicación - Preguntas',
                'unique_together': {('app', 'askBody')},
            },
        ),
        migrations.CreateModel(
            name='TeacherPersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('m', 'Masculino'), ('f', 'Femenino')], default='m', max_length=1)),
                ('numberidentification', models.CharField(max_length=11, unique=True)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('cellphone', models.CharField(blank=True, max_length=8, null=True)),
                ('phone', models.CharField(blank=True, max_length=8, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('nacionality', models.CharField(default='cubana', max_length=50)),
                ('pasaport', models.CharField(blank=True, max_length=10, null=True)),
                ('degree', models.CharField(choices=[('Ing.', 'Ingeniero'), ('Lic.', 'Licenciado'), ('Ms.C.', 'Master en Ciencias'), ('Dr.C.', 'Doctor en Ciencias'), ('PhD.C.', 'Postdoctor en Ciencias'), ('Ning.', 'Ninguno')], default='Lic.', max_length=20)),
                ('title', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('user', models.OneToOneField(default=2, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Datos Personales - Profesor',
                'verbose_name_plural': 'Datos Personales - Profesores',
                'unique_together': {('name', 'lastname', 'numberidentification', 'email')},
            },
        ),
        migrations.CreateModel(
            name='OptionAskApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=250, verbose_name='Opción')),
                ('askApp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.AskApplication', verbose_name='Pregunta')),
            ],
            options={
                'verbose_name': 'Aplicación - Opción',
                'verbose_name_plural': 'Aplicación - Opciones',
                'unique_together': {('askApp', 'option')},
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appdate', models.DateField(auto_now=True, verbose_name='Fecha Aplicación')),
                ('status', models.CharField(choices=[('aceptado', 'Aceptado'), ('espera', 'En espera'), ('proceso', 'En proceso'), ('denegado', 'Denegado'), ('cancelada', 'Cancelada')], default='espera', max_length=9)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.CourseInformation', verbose_name='Curso')),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.Edition', verbose_name='Edición')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.StudentPersonalInformation', verbose_name='Aspirante')),
            ],
            options={
                'verbose_name': 'Applicación - Aplicación Estudiante',
                'verbose_name_plural': 'Applicación - Aplicaciones Estudiante',
                'unique_together': {('course', 'student', 'edition')},
            },
        ),
        migrations.CreateModel(
            name='AnswerApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=1000, verbose_name='Respuesta')),
                ('appdate', models.DateField(auto_now=True, verbose_name='Fecha Aplicación')),
                ('askApp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.AskApplication', verbose_name='Pregunta')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Docencia.StudentPersonalInformation', verbose_name='Aspirante')),
            ],
            options={
                'verbose_name': 'Aplicación - Respuesta',
                'verbose_name_plural': 'Aplicación - Respuestas',
                'unique_together': {('askApp', 'student')},
            },
        ),
    ]
